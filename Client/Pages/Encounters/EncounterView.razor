@page "/encounters/view/{Id}"

@if (_model != null)
{
    <MudGrid>
        <MudItem xs="6">
            <MudText Typo="Typo.h5" Class="fw-bold">@_model.Name</MudText>
        </MudItem>
        <MudItem xs="6" Class="d-flex justify-content-end">
            <ToggledText @bind-Value="_autoLoad" Text="Auto Load" />
        </MudItem>
        
        <ConcentrationPowerGrid @bind-ConcentrationPowers=@_concentrationPowers FromView="true"/>

        <MudItem xs="6">
            <MudTable Items="_initatives" T="InitativeDataModel" Breakpoint="Breakpoint.None" Elevation="3" Outlined="true">
                <ColGroup>
                    <col style="width: 15%"/>
                    <col style="width: 46%"/>
                    <col style="width: 11%"/>
                    <col style="width: 11%"/>
                    <col style="width: 11%"/>
                    <col style="width: 11%"/>
                </ColGroup>
                <HeaderContent>
                    <MudTh Class="mud-theme-tertiary text-white">Init</MudTh>
                    <MudTh Class="mud-theme-tertiary text-white">Name</MudTh>
                    <MudTh Class="mud-theme-tertiary text-white">AC</MudTh>
                    <MudTh Class="mud-theme-tertiary text-white">HP</MudTh>
                    <MudTh Class="mud-theme-tertiary text-white">FP</MudTh>
                    <MudTh Class="mud-theme-tertiary text-white">TP</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Init" Class="@GetRowClass(context)">@context.Initative</MudTd>
                    <MudTd DataLabel="Name" Class="@GetRowClass(context)">@context.Name</MudTd>
                    <MudTd DataLabel="AC" Class="@GetRowClass(context)">@context.ArmorClass</MudTd>
                    <MudTd DataLabel="HP" Style=@($"color: {context.GetHPColor()}; background: {HealthBackground(context)}")>@context.GetHPDisplay()</MudTd>
                    <MudTd DataLabel="FP" Class="@GetRowClass(context)">@context.ForcePoints</MudTd>
                    <MudTd DataLabel="TP" Class="@GetRowClass(context)">@context.TechPoints</MudTd>
                </RowTemplate>
            </MudTable>
        </MudItem>

        <MudItem xs="6">
            @if (_currentPlayer?.Being is CharacterResponse character)
            {
                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Outlined="true">
                    <MudTabPanel Text="Basic">  
                        <MudGrid>
                            <MudItem xs="12">
                                <MudText>Name: <b>@character.Name</b></MudText>
                            </MudItem>

                            <MudItem xs="6">
                                <MudText>Player: <b>@character.PlayerName</b></MudText>
                            </MudItem>
                            <MudItem xs="6">
                                <MudText>Class: <b>@character.Class</b></MudText>
                            </MudItem>

                            <MudItem xs="3">
                                <MudText>AC: <b>@character.ArmorClass</b></MudText>
                            </MudItem>
                            <MudItem xs="3">
                                <MudText>Initative: <b>@character.DexterityBonus.PrintInt()</b></MudText>
                            </MudItem>
                            <MudItem xs="3">
                                <MudText>Proficiency: <b>@character?.GetProficiencyBonus().PrintInt()</b></MudText>
                            </MudItem>
                            <MudItem xs="3">
                                <MudText>Speed: <b>@character.Speed</b></MudText>
                            </MudItem>

                            <MudItem xs="12" Class="d-flex align-items-center">
                                <MudText>HP:</MudText>
                                <MudProgressLinear Class="mx-2" Color="Color.Info" @bind-Value="@_currentPlayer.HPAsDouble" Size="Size.Large" Max="@character.HitPoints" />
                                <MudText Class="mx-2">@_currentPlayer.CurrentHP/@character.HitPoints</MudText>
                            </MudItem>

                            <MudItem xs="2" Class="d-flex justify-center pa-0">STR: @character.Strength</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">CON: @character.Constitution</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">DEX: @character.Dexterity</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">INT: @character.Intelligence</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">WIS: @character.Wisdom</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">CHA: @character.Charisma</MudItem>

                            <MudItem xs="2" Class="d-flex justify-center pa-0">(<b>@character.StrengthBonus.PrintInt()</b>)</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">(<b>@character.DexterityBonus.PrintInt()</b>)</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">(<b>@character.ConstitutionBonus.PrintInt()</b>)</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">(<b>@character.IntelligenceBonus.PrintInt()</b>)</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">(<b>@character.WisdomBonus.PrintInt()</b>)</MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pa-0">(<b>@character.CharismaBonus.PrintInt()</b>)</MudItem>
                            
                            <MudItem xs="2" Class="d-flex justify-center pa-0">
                                Save: <b>@character.SkillBonus(character.StrengthBonus, character.StrengthSave).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pt-0">
                                Save: <b>@character.SkillBonus(character.DexterityBonus, character.DexteritySave).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pt-0">
                                Save: <b>@character.SkillBonus(character.ConstitutionBonus, character.ConstitutionSave).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pt-0">
                                Save: <b>@character.SkillBonus(character.IntelligenceBonus, character.IntelligenceSave).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pt-0">
                                Save: <b>@character.SkillBonus(character.WisdomBonus, character.WisdomSave).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex justify-center pt-0">
                                Save: <b>@character.SkillBonus(character.CharismaBonus, character.CharismaSave).PrintInt()</b>
                            </MudItem>

                            <MudItem xs="4" Class="d-flex justify-center pb-0">
                                Acrobatics: <b>@character.SkillBonus(character.DexterityBonus, character.Acrobatics).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pb-0">
                                Investigation: <b>@character.SkillBonus(character.IntelligenceBonus, character.Investigation).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pb-0">
                                Persuasion: <b>@character.SkillBonus(character.CharismaBonus, character.Persuasion).PrintInt()</b>
                            </MudItem>

                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Animal Handling: <b>@character.SkillBonus(character.WisdomBonus, character.AnimalHandling).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Lore: <b>@character.SkillBonus(character.IntelligenceBonus, character.Lore).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Piloting: <b>@character.SkillBonus(character.IntelligenceBonus, character.Piloting).PrintInt()</b>
                            </MudItem>

                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Athletics: <b>@character.SkillBonus(character.StrengthBonus, character.Athletics).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Medicine: <b>@character.SkillBonus(character.WisdomBonus, character.Medicine).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Sleight Of Hand: <b>@character.SkillBonus(character.DexterityBonus, character.SleightOfHand).PrintInt()</b>
                            </MudItem>

                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Deception: <b>@character.SkillBonus(character.CharismaBonus, character.Deception).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Nature: <b>@character.SkillBonus(character.IntelligenceBonus, character.Nature).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Stealth: <b>@character.SkillBonus(character.DexterityBonus, character.Stealth).PrintInt()</b>
                            </MudItem>

                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Insight: <b>@character.SkillBonus(character.WisdomBonus, character.Insight).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Perception: <b>@character.SkillBonus(character.WisdomBonus, character.Perception).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Survival: <b>@character.SkillBonus(character.WisdomBonus, character.Survival).PrintInt()</b>
                            </MudItem>

                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Intimidation: <b>@character.SkillBonus(character.CharismaBonus, character.Intimidation).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Performance: <b>@character.SkillBonus(character.CharismaBonus, character.Performance).PrintInt()</b>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center pa-0">
                                Technology: <b>@character.SkillBonus(character.IntelligenceBonus, character.Technology).PrintInt()</b>
                            </MudItem>
                        </MudGrid>
                    </MudTabPanel>
                    <MudTabPanel Text="Actions">  
                        @foreach (var weapon in character.Weapons)
                        {
                            <MudPaper Class="my-4 pa-4" Elevation="3" Outlined="true">
                                <MudGrid>
                                    <MudItem xs="4">@weapon.Name</MudItem>
                                    <MudItem xs="2">@character.WeaponBonus(weapon.Melee).PrintInt()</MudItem>
                                    <MudItem xs="2">@weapon.Damage@character.WeaponBonus(weapon.Melee, true).PrintInt()</MudItem>
                                    <MudItem xs="4">@weapon.DamageType</MudItem>

                                    <MudItem xs="12" Class="d-flex flex-wrap">
                                        @foreach (var prop in weapon.PropertyDescriptions)
                                        {
                                            <MudButton Class="mx-2" Variant="Variant.Outlined" Color="Color.Info" OnClick="@(() => ShowWeaponProperty(prop))" Size="Size.Small">
                                                @prop.Name @(string.IsNullOrWhiteSpace(prop.Description) ? "" : $"({prop.Description}cd )")
                                            </MudButton>
                                        }
                                    </MudItem>
                                </MudGrid>
                            </MudPaper>
                        }
                    </MudTabPanel>
                    <MudTabPanel Text="ForcePowers">
                        <MudGrid>
                            <MudItem xs="3"/>
                            <MudItem xs="3" Class="d-flex justify-center">Light</MudItem>
                            <MudItem xs="3" Class="d-flex justify-center">Universal</MudItem>
                            <MudItem xs="3" Class="d-flex justify-center">Dark</MudItem>

                            <MudItem xs="3" Class="d-flex justify-center">Modifier</MudItem>
                            <MudItem xs="3" Class="d-flex justify-center"><b>@character.ForceAttackModifier(ForceAlignment.Light).PrintInt()</b></MudItem>
                            <MudItem xs="3" Class="d-flex justify-center"><b>@character.ForceAttackModifier(ForceAlignment.Universal).PrintInt()</b></MudItem>
                            <MudItem xs="3" Class="d-flex justify-center"><b>@character.ForceAttackModifier(ForceAlignment.Dark).PrintInt()</b></MudItem>

                            <MudItem xs="3" Class="d-flex justify-center">Save DC</MudItem>
                            <MudItem xs="3" Class="d-flex justify-center"><b>@character.ForceSavingThrow(ForceAlignment.Light)</b></MudItem>
                            <MudItem xs="3" Class="d-flex justify-center"><b>@character.ForceSavingThrow(ForceAlignment.Universal)</b></MudItem>
                            <MudItem xs="3" Class="d-flex justify-center"><b>@character.ForceSavingThrow(ForceAlignment.Dark)</b></MudItem>

                            <MudItem xs="12" Class="d-flex align-items-center">
                                <MudText Class="me-5">FP: <b>@_currentPlayer?.CurrentFP/@character.ForcePoints</b></MudText>
                            </MudItem>

                            <MudItem xs="12">
                                <MudText Typo="Typo.h6" Class="fw-bold">Force Powers</MudText>
                            </MudItem>
                            <ForcePowerGrid Title="At-Will" Powers="@SelectedForcePowers.Where(x => x.Level == 0).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 1" Powers="@SelectedForcePowers.Where(x => x.Level == 1).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 2" Powers="@SelectedForcePowers.Where(x => x.Level == 2).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 3" Powers="@SelectedForcePowers.Where(x => x.Level == 3).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 4" Powers="@SelectedForcePowers.Where(x => x.Level == 4).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 5" Powers="@SelectedForcePowers.Where(x => x.Level == 5).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 6" Powers="@SelectedForcePowers.Where(x => x.Level == 6).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 7" Powers="@SelectedForcePowers.Where(x => x.Level == 7).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 8" Powers="@SelectedForcePowers.Where(x => x.Level == 8).ToList()" ShowCast="false" />
                            <ForcePowerGrid Title="Level 9" Powers="@SelectedForcePowers.Where(x => x.Level == 9).ToList()" ShowCast="false" />
                        </MudGrid>
                    </MudTabPanel>
                    <MudTabPanel Text="Abilities">  
                        <MudItem xs="12" Class="d-flex flex-wrap">
                            @foreach (var ability in character.Abilities.OrderBy(x => x.Display))
                            {
                                <MudButton Class="mx-2" Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => ShowAbility(ability))" Size="Size.Small">@ability.Name</MudButton>
                            }
                        </MudItem>
                    </MudTabPanel>
                </MudTabs>
            }
        </MudItem>
    </MudGrid>
}
