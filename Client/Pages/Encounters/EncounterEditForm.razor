@using DMAdvantage.Shared
@inject Radzen.DialogService DialogService

<EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="row my-2">
        <div class="form-group col">
            <label>Name</label>
            <InputText @bind-Value="@_model.Name" class="form-control" />
            <ValidationMessage For="@(() => _model.Name)" />
        </div>
        <div class="col d-flex align-items-end">
            <text>Auto Save:</text>
            <RadzenSwitch @bind-Value="@_autoSave"/>
        </div>
    </div>
    <div class="row my-2">
        <div class="col">
            <RadzenTabs TabPosition="TabPosition.Top" RenderMode="TabRenderMode.Client" style="margin-bottom: 10px">
                <Tabs>
                    <RadzenTabsItem Text="Character">
                        <div class="row">
                            <RadzenAutoComplete Data=@_characters TextProperty="Name" LoadData=@OnLoadCharacterData 
                                Change=@(args => OnCharacterChange(args)) Class="col" Style="width: 100%"/>
                        </div>
                        @if (_selectedCharacter != null)
                        {
                            <div class="row mb-2">
                                <div class="col-3">
                                    <label class="row">Name</label>
                                    <b class="fs-5 row">@_selectedCharacter.Name</b>
                                </div>
                                <div class="col">
                                    <label class="row">AC</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Warning" Text=@_selectedCharacter.ArmorClass.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">HP</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Danger" Text=@_selectedCharacter.HitPoints.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">LVL</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Info" Text=@_selectedCharacter.Level.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">STR</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCharacter.StrengthBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">DEX</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCharacter.DexterityBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">CON</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCharacter.ConstitutionBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">INT</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCharacter.IntelligenceBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">WIS</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCharacter.WisdomBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">CHA</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCharacter.CharismaBonus.ToString() class="fs-5 row"/>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <RadzenButton Icon="add_box" class="mb-2 btn-success" Text="Insert" Click="@OnAddCharacter" />
                            </div>
                        }
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Creature">
                        <div class="row">
                            <RadzenAutoComplete Data=@_creatures TextProperty="Name" LoadData=@OnLoadCreatureData 
                                Change=@(args => OnCreatureChange(args)) Class="col" Style="width: 100%"/>
                        </div>
                        @if (_selectedCreature != null)
                        {
                            <div class="row mb-2">
                                <div class="col-3">
                                    <label class="row">Name</label>
                                    <b class="fs-5 row">@_selectedCreature.Name</b>
                                </div>
                                <div class="col">
                                    <label class="row">AC</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Warning" Text=@_selectedCreature.ArmorClass.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">HP</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Danger" Text=@_selectedCreature.HitPoints.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">CR</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Info" Text=@_selectedCreature.ChallengeRating.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">STR</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCreature.StrengthBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">DEX</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCreature.DexterityBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">CON</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCreature.ConstitutionBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">INT</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCreature.IntelligenceBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">WIS</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCreature.WisdomBonus.ToString() class="fs-5 row"/>
                                </div>
                                <div class="col">
                                    <label class="row">CHA</label>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@_selectedCreature.CharismaBonus.ToString() class="fs-5 row"/>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <RadzenButton Icon="add_box" class="mb-2 btn-success" Text="Insert" Click="@OnAddCreature" />
                            </div>
                        }
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>
            <ConcentrationPowerGrid @bind-ConcentrationPowers=@_concentrationPowers />
            <div class="d-flex mb-2">
                @if (!_initativeEditing)
                {
                    <RadzenButton Icon="create" Text="Edit Initative" Click=@InitativeEditStart ButtonStyle="ButtonStyle.Light" Style="width: 200px" class="me-2"/>
                }
                else
                {
                    <RadzenButton Icon="close" Text="Close Edit" Click=@InitativeEditDone ButtonStyle="ButtonStyle.Danger" Style="width: 200px" class="me-2"/>
                }
                <RadzenButton Icon="chevron_left" Click=@InitativePrevious ButtonStyle="ButtonStyle.Primary" class="me-2"/>
                <RadzenButton Icon="chevron_right" Click=@InitativeNext ButtonStyle="ButtonStyle.Primary" />
            </div>
            <div class="row mb-2">
                <div class="col">
                    <RadzenDataGrid @ref="_initativeGrid" Data="@_initatives" TItem="InitativeDataModel" @bind-Value="@SelectedInitatives"
                        EditMode="Radzen.DataGridEditMode.Multiple" RowSelect=OnRowSelect>
                        <Columns>
                            <RadzenDataGridColumn TItem="InitativeDataModel" Width="10%">
                                <Template Context="initative">
                                    @if (_currentPlayer == initative)
                                    {
                                        <RadzenIcon Icon="chevron_right" />
                                    }
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="InitativeDataModel" Property="Initative" Title="Init" Width="12%">
                                <EditTemplate Context="initative">
                                    <RadzenNumeric @bind-Value="initative.Initative" Style="width:100%" />
                                </EditTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="InitativeDataModel" Property="Name" Title="Name" Width="38%"/>
                            <RadzenDataGridColumn TItem="InitativeDataModel" Property="ArmorClass" Title="AC" Width="10%" />
                            <RadzenDataGridColumn TItem="InitativeDataModel" Property="CurrentHP" Title="HP" Width="10%" />
                        </Columns>
                    </RadzenDataGrid>
                </div>
                <div class="col">
                    <RadzenTabs TabPosition="TabPosition.Top" RenderMode="TabRenderMode.Client" style="margin-bottom: 10px">
                        <Tabs>
                            <RadzenTabsItem Text="Basic">
                                <div class="row mb-2">
                                    <div class="col">Name: @SelectedInitative?.Name</div>
                                </div>
                                @if (SelectedInitative?.Being is CharacterResponse character)
                                {
                                    <div class="row mb-2">
                                        <div class="col">
                                            Player: @character.PlayerName
                                        </div>
                                        <div class="col">
                                            Class: @character.Class
                                        </div>
                                    </div>
                                }
                                <div class="row mb-2">
                                    <div class="col">
                                        AC: <b>@SelectedInitative?.Being?.ArmorClass</b>
                                    </div>
                                    <div class="col">
                                        Initiative: <b>@SelectedInitative?.Being?.DexterityBonus.PrintInt()</b>
                                    </div>
                                    @if (SelectedInitative?.Being is CharacterResponse proficiencyCharacter)
                                    {
                                        <div class="col">
                                            Proficiency: <b>@proficiencyCharacter.GetProficiencyBonus().PrintInt()</b>
                                        </div>
                                    }
                                    <div class="col">
                                        Speed:<b>@SelectedInitative?.Being?.Speed</b>
                                    </div>
                                </div>
                                <div class="d-flex mb-2 align-items-center">
                                    <div class="me-2">
                                        HP:
                                    </div>
                                    @if (SelectedInitative?.Being != null)
                                    {
                                        <RadzenProgressBar @bind-Value=@SelectedInitative.HPAsDouble Max=@SelectedInitative.Being.HitPoints ShowValue="false" class="me-2" style="width: 200px;"/>
                                    }
                                    <div class="me-4">
                                        @SelectedInitative?.CurrentHP/@SelectedInitative?.Being?.HitPoints
                                    </div>
                                    <div class="me-2" style="width: 80px">
                                        <RadzenNumeric @bind-Value="_healthEdit" Style="width:100%" />
                                    </div>
                                    <button type="button" class="btn btn-danger me-2" @onclick=@ApplyDamage>
                                        <span class="oi oi-droplet" aria-hidden="true"></span>
                                    </button>
                                    <button type="button" class="btn btn-success" @onclick=@ApplyHealth>
                                        <span class="oi oi-heart" aria-hidden="true"></span>
                                    </button>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        STR: @SelectedInitative?.Being?.Strength
                                    </div>
                                    <div class="col">
                                        DEX: @SelectedInitative?.Being?.Dexterity
                                    </div>
                                    <div class="col">
                                        CON: @SelectedInitative?.Being?.Constitution
                                    </div>
                                    <div class="col">
                                        INT: @SelectedInitative?.Being?.Intelligence
                                    </div>
                                    <div class="col">
                                        WIS: @SelectedInitative?.Being?.Wisdom
                                    </div>
                                    <div class="col">
                                        CHA: @SelectedInitative?.Being?.Charisma
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        (<b>@SelectedInitative?.Being?.StrengthBonus.PrintInt()</b>)
                                    </div>
                                    <div class="col">
                                        (<b>@SelectedInitative?.Being?.DexterityBonus.PrintInt()</b>)
                                    </div>
                                    <div class="col">
                                        (<b>@SelectedInitative?.Being?.ConstitutionBonus.PrintInt()</b>)
                                    </div>
                                    <div class="col">
                                        (<b>@SelectedInitative?.Being?.IntelligenceBonus.PrintInt()</b>)
                                    </div>
                                    <div class="col">
                                        (<b>@SelectedInitative?.Being?.WisdomBonus.PrintInt()</b>)
                                    </div>
                                    <div class="col">
                                        (<b>@SelectedInitative?.Being?.CharismaBonus.PrintInt()</b>)
                                    </div>
                                </div>
                                @if (SelectedInitative?.Being is CharacterResponse skillChar)
                                {
                                    <div class="row">
                                        <div class="col">
                                            Save: <b>@skillChar.SkillBonus(skillChar.StrengthBonus, skillChar.StrengthSave).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Save: <b>@skillChar.SkillBonus(skillChar.DexterityBonus, skillChar.DexteritySave).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Save: <b>@skillChar.SkillBonus(skillChar.ConstitutionBonus, skillChar.ConstitutionSave).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Save: <b>@skillChar.SkillBonus(skillChar.IntelligenceBonus, skillChar.IntelligenceSave).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Save: <b>@skillChar.SkillBonus(skillChar.WisdomBonus, skillChar.WisdomSave).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Save: <b>@skillChar.SkillBonus(skillChar.CharismaBonus, skillChar.CharismaSave).PrintInt()</b>
                                        </div>
                                    </div>
                                    <hr />
                                    <div class="row">
                                        <div class="col">
                                            Acrobatics: <b>@skillChar.SkillBonus(skillChar.DexterityBonus, skillChar.Acrobatics).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Investigation: <b>@skillChar.SkillBonus(skillChar.IntelligenceBonus, skillChar.Investigation).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Persuasion: <b>@skillChar.SkillBonus(skillChar.CharismaBonus, skillChar.Persuasion).PrintInt()</b>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            Animal Handling: <b>@skillChar.SkillBonus(skillChar.WisdomBonus, skillChar.AnimalHandling).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Lore: <b>@skillChar.SkillBonus(skillChar.IntelligenceBonus, skillChar.Lore).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Piloting: <b>@skillChar.SkillBonus(skillChar.IntelligenceBonus, skillChar.Piloting).PrintInt()</b>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            Athletics: <b>@skillChar.SkillBonus(skillChar.StrengthBonus, skillChar.Athletics).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Medicine: <b>@skillChar.SkillBonus(skillChar.WisdomBonus, skillChar.Medicine).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Sleight Of Hand: <b>@skillChar.SkillBonus(skillChar.DexterityBonus, skillChar.SleightOfHand).PrintInt()</b>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            Deception: <b>@skillChar.SkillBonus(skillChar.CharismaBonus, skillChar.Deception).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Nature: <b>@skillChar.SkillBonus(skillChar.IntelligenceBonus, skillChar.Nature).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Stealth: <b>@skillChar.SkillBonus(skillChar.DexterityBonus, skillChar.Stealth).PrintInt()</b>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            Insight: <b>@skillChar.SkillBonus(skillChar.WisdomBonus, skillChar.Insight).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Perception: <b>@skillChar.SkillBonus(skillChar.WisdomBonus, skillChar.Perception).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Survival: <b>@skillChar.SkillBonus(skillChar.WisdomBonus, skillChar.Survival).PrintInt()</b>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            Intimidation: <b>@skillChar.SkillBonus(skillChar.CharismaBonus, skillChar.Intimidation).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Performance: <b>@skillChar.SkillBonus(skillChar.CharismaBonus, skillChar.Performance).PrintInt()</b>
                                        </div>
                                        <div class="col">
                                            Technology: <b>@skillChar.SkillBonus(skillChar.IntelligenceBonus, skillChar.Technology).PrintInt()</b>
                                        </div>
                                    </div>
                                }
                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Actions">
                                @if (SelectedInitative?.Being is CharacterResponse characterActions)
                                {
                                    @foreach(var weapon in characterActions.Weapons)
                                    {
                                        <RadzenCard class="p-2">
                                            <div class="row">
                                                <div class="col-4">
                                                    @weapon.Name
                                                </div>
                                                <div class="col-2">
                                                    @characterActions.WeaponBonus(weapon.Melee).PrintInt()
                                                </div>
                                                <div class="col-2">
                                                    @weapon.Damage@characterActions.WeaponBonus(weapon.Melee, true).PrintInt()
                                                </div>
                                                <div class="col-4">
                                                    @weapon.DamageType
                                                </div>
                                            </div>
                                            <div class="d-flex flex-wrap">
                                                @foreach(var prop in weapon.PropertyDescriptions)
                                                {
                                                    <RadzenButton Text="@prop.ToString()" Click=@(() => ShowInlineDialog(prop)) Size="ButtonSize.Small" class="m-1 px-1"/>
                                                }
                                            </div>
                                        </RadzenCard>       
                                    }
                                }
                                @if (SelectedInitative?.Being is CreatureResponse creatureActions)
                                {
                                    @foreach(var action in creatureActions.Actions)
                                    {
                                        <RadzenCard>
                                            <div class="row">
                                                <div class="col-4">
                                                    @action.Name
                                                </div>
                                                <div class="col">
                                                    @action.Hit
                                                </div>
                                                <div class="col">
                                                    @action.Range
                                                </div>
                                                <div class="col">
                                                    @action.Damage
                                                </div>
                                                <div class="col-2">
                                                    @if (!string.IsNullOrWhiteSpace(action.Damage))
                                                    {
                                                        @action.DamageType
                                                    }
                                                </div>
                                            </div>
                                            <div class="row">
                                                <p>@action.Description</p>
                                            </div>
                                        </RadzenCard>       
                                    }
                                }
                            </RadzenTabsItem>
                            <RadzenTabsItem Text="ForcePowers">
                                @if (SelectedInitative?.Being is CharacterResponse characterForce)
                                {
                                    <div class="row mb-2 align-items-center">
                                        <div class="col"/>
                                        <div class="col">
                                            <text>Light</text>
                                        </div>
                                        <div class="col">
                                            <text>Universal</text>
                                        </div>
                                        <div class="col">
                                            <text>Dark</text>
                                        </div>
                                    </div>
                                    <div class="row mb-2 align-items-center">
                                        <div class="col">
                                            <text>Modifier</text>
                                        </div>
                                        <div class="col">
                                            <text><b>@characterForce.ForceAttackModifier(ForceAlignment.Light).PrintInt()</b></text>
                                        </div>
                                        <div class="col">
                                            <text><b>@characterForce.ForceAttackModifier(ForceAlignment.Universal).PrintInt()</b></text>
                                        </div>
                                        <div class="col">
                                            <text><b>@characterForce.ForceAttackModifier(ForceAlignment.Dark).PrintInt()</b></text>
                                        </div>
                                    </div>
                                    <div class="row mb-2 align-items-center">
                                        <div class="col">
                                            <text>Save DC</text>
                                        </div>
                                        <div class="col">
                                            <text><b>@characterForce.ForceSavingThrow(ForceAlignment.Light)</b></text>
                                        </div>
                                        <div class="col">
                                            <text><b>@characterForce.ForceSavingThrow(ForceAlignment.Universal)</b></text>
                                        </div>
                                        <div class="col">
                                            <text><b>@characterForce.ForceSavingThrow(ForceAlignment.Dark)</b></text>
                                        </div>
                                    </div>
                                }
                                <div class="d-flex mb-2 align-items-center">
                                    <div class="me-5">
                                        FP: <b>@SelectedInitative?.CurrentFP/@SelectedInitative?.Being?.ForcePoints</b>
                                    </div>
                                    <div class="me-2">
                                        <RadzenButton Icon="add" Click=@(() => SelectedInitative!.CurrentFP++) ButtonStyle="ButtonStyle.Danger"/>
                                    </div>
                                    <div>
                                        <RadzenButton Icon="remove" Click=@(() => SelectedInitative!.CurrentFP--) ButtonStyle="ButtonStyle.Danger"/>
                                    </div>
                                </div>
                                <div class="row mb-2 align-items-bottom" style="font-size: x-large">
                                    <b>Force Powers</b>
                                </div>
                                <ForcePowerGrid Title="At-Will" Powers=@SelectedForcePowers.Where(x => x.Level == 0).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 1" Powers=@SelectedForcePowers.Where(x => x.Level == 1).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 2" Powers=@SelectedForcePowers.Where(x => x.Level == 2).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 3" Powers=@SelectedForcePowers.Where(x => x.Level == 3).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 4" Powers=@SelectedForcePowers.Where(x => x.Level == 4).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 5" Powers=@SelectedForcePowers.Where(x => x.Level == 5).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 6" Powers=@SelectedForcePowers.Where(x => x.Level == 6).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 7" Powers=@SelectedForcePowers.Where(x => x.Level == 7).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 8" Powers=@SelectedForcePowers.Where(x => x.Level == 8).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                                <ForcePowerGrid Title="Level 9" Powers=@SelectedForcePowers.Where(x => x.Level == 9).ToList() Initative=@SelectedInitative 
                                    Click=@((args) => ForcePowerClicked(args)) />
                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
                </div>
            </div>
        </div>
    </div>
    <div class="row my-2">
        <button disabled="@_loading" class="btn btn-primary">
            @if (_loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Save
        </button>
        <NavLink href="encounters" class="btn btn-link">Cancel</NavLink>
    </div>
</EditForm>

@code {
    async Task ShowInlineDialog(WeaponDescription weapon)
    {
        var result = await DialogService.OpenAsync(weapon.Name, ds =>
            @<div>
                <p Style="margin-bottom: 1rem">@StaticData.WeaponPropertyDescriptions[Enum.Parse<WeaponProperty>(weapon.Name ?? string.Empty)]</p>
            </div>);
    }

    async Task BusyDialog(string message)
    {
        await DialogService.OpenAsync("", ds =>
        {
            RenderFragment content = b =>
            {
                b.OpenElement(0, "div");
                b.AddAttribute(1, "class", "row");

                b.OpenElement(2, "div");
                b.AddAttribute(3, "class", "col-md-12");

                b.AddContent(4, message);

                b.CloseElement();
                b.CloseElement();
            };
            return content;
        }, new Radzen.DialogOptions() { ShowTitle = false, Style = "min-height:auto;min-width:auto;width:auto" });
    }
}