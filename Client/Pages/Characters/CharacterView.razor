@page "/characters/view/{PlayerName}"
@inject DialogService DialogService

@if (_model != null)
{
    <EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <div class="row my-2">
            <div class="col fw-bold text-danger" style="font-size: x-large">
                @_model.Name
            </div>
        </div>
        <div class="row my-2">
             <div class="col">
                Player: <b>@_model.PlayerName</b>
            </div>
            <div class="col">
                Class: <b>@_model.Class</b>
            </div>
        </div>
        <div class="row my-2">
            <div class="col">
                Lvl: <b>@_model.Level</b>
            </div>
            <div class="col">
                HP: <b>@_model.HitPoints</b>
            </div>
            <div class="col">
                AC: <b>@_model.ArmorClass</b>
            </div>
            <div class="col">
                Spd: <b>@_model.Speed</b>
            </div>
        </div>
        <RadzenCard class="p-2 my-2">
            <div class="d-flex justify-content-around align-items-center my-2">
                <div class="d-flex flex-column align-items-center">
                    <text class="text-danger fw-bold" style="font-size: large"><b>STR</b></text>
                    <text class="fw-bold" style="font-size: x-large">@_model.StrengthBonus.PrintInt()</text>
                    <text style="font-size: small">(@_model.Strength)</text>
                </div>
                <div class="d-flex flex-column align-items-center">
                    <text class="text-danger fw-bold" style="font-size: large"><b>DEX</b></text>
                    <text class="fw-bold" style="font-size: x-large">@_model.DexterityBonus.PrintInt()</text>
                    <text style="font-size: small">(@_model.Dexterity)</text>
                </div>
                <div class="d-flex flex-column align-items-center">
                    <text class="text-danger fw-bold" style="font-size: large"><b>CON</b></text>
                    <text class="fw-bold" style="font-size: x-large">@_model.ConstitutionBonus.PrintInt()</text>
                    <text style="font-size: small">(@_model.Constitution)</text>
                </div>
            </div>
            <div class="d-flex justify-content-around align-items-center my-2">
                <div class="d-flex flex-column align-items-center">
                    <text class="text-danger fw-bold" style="font-size: large"><b>INT</b></text>
                    <text class="fw-bold" style="font-size: x-large">@_model.IntelligenceBonus.PrintInt()</text>
                    <text style="font-size: small">(@_model.Intelligence)</text>
                </div>
                <div class="d-flex flex-column align-items-center">
                    <text class="text-danger fw-bold" style="font-size: large"><b>WIS</b></text>
                    <text class="fw-bold" style="font-size: x-large">@_model.WisdomBonus.PrintInt()</text>
                    <text style="font-size: small">(@_model.Wisdom)</text>
                </div>
                <div class="d-flex flex-column align-items-center">
                    <text class="text-danger fw-bold" style="font-size: large"><b>CHA</b></text>
                    <text class="fw-bold" style="font-size: x-large">@_model.CharismaBonus.PrintInt()</text>
                    <text style="font-size: small">(@_model.Charisma)</text>
                </div>
            </div>
        </RadzenCard>
        <RadzenCard class="my-2">
            <h2>Weapons</h2>
            <div class="row d-flex align-items-center">
                <text class="col-6 fw-bold">Name</text>
                <text class="col-3 fw-bold">Hit</text>
                <text class="col-3 fw-bold">Dam</text>
            </div>
            <hr/>
            @foreach (var weapon in _model.Weapons)
            {
                <div class="row">
                    <div class="col-6">
                        @weapon.Name
                    </div>
                    <div class="col-3">
                        @_model.WeaponBonus(weapon.Melee).PrintInt()
                    </div>
                    <div class="col-3">
                        @weapon.Damage@_model.WeaponBonus(weapon.Melee, true).PrintInt()
                    </div>
                </div>
            }
        </RadzenCard>
        <RadzenCard class="my-2">
            <h2>Force Powers</h2>
            <div class="row mb-2 align-items-center">
                <div class="col"></div>
                <div class="col">
                    <text>Modifier</text>
                </div>
                <div class="col">
                    <text>Save DC</text>
                </div>
            </div>
            <div class="row mb-2 align-items-center">
                <div class="col">
                    <text>Light</text>
                </div>
                <div class="col">
                    <text><b>@_model.ForceAttackModifier(ForceAlignment.Light).PrintInt()</b></text>
                </div>
                <div class="col">
                    <text><b>@_model.ForceSavingThrow(ForceAlignment.Light).PrintInt()</b></text>
                </div>
            </div>
            <div class="row mb-2 align-items-center">
                <div class="col">
                    <text>Universal</text>
                </div>
                <div class="col">
                    <text><b>@_model.ForceAttackModifier(ForceAlignment.Universal).PrintInt()</b></text>
                </div>
                <div class="col">
                    <text><b>@_model.ForceSavingThrow(ForceAlignment.Universal).PrintInt()</b></text>
                </div>
            </div>
            <div class="row mb-2 align-items-center">
                <div class="col">
                    <text>Dark</text>
                </div>
                <div class="col">
                    <text><b>@_model.ForceAttackModifier(ForceAlignment.Dark).PrintInt()</b></text>
                </div>
                <div class="col">
                    <text><b>@_model.ForceSavingThrow(ForceAlignment.Dark).PrintInt()</b></text>
                </div>
            </div>
            @for (var i = 0; i <= _model.MaxForcePowerLevel; i++)
            {
                <h3>Level @i</h3>
                <hr class="mt-0" />
                <div class="row mb-2">
                    <div class="d-flex flex-wrap">
                        @foreach (var power in _forcePowers.Where(x => x.Level == i && _model.ForcePowerIds.Contains(x.Id)))
                        {
                            <button type="button" class="btn m-1" style=@CssStyle(power) @onclick=@(() => InfoClicked(power))>
                                <div class="row px-1 d-flex">
                                    @power.Name
                                </div>
                                @if (power.PrerequisiteId != null && power.PrerequisiteId != Guid.Empty)
                                {
                                    <div class="row px-1" style="font-size: 10px"><b>Pre-Req: @GetPowerName(power.PrerequisiteId)</b></div>
                                }
                            </button>
                        }
                    </div>
                </div>
            }
        </RadzenCard>
    </EditForm>
}

@code
{
    async Task ShowInlineDialog(ForcePowerRequest power)
    {
        await DialogService.OpenAsync(power.Name, _ =>
            @<div class="d-flex flex-column">
                <text><b>Alignment:</b> @power.Alignment</text>
                <text><b>Concentration:</b> @power.Concentration</text>
                <text><b>Hit:</b> @power.HitOption?.GetStringValue()</text>
                @if (!string.IsNullOrWhiteSpace(power.HitDescription))
                {
                    <div><b>Description:</b> @power.HitDescription</div>
                }
                <text><b>Casting Time:</b> @power.CastingPeriod.GetStringValue()</text>
                <text><b>Range:</b> @power.Range.GetStringValue()</text>
                <text><b>Duration:</b> @power.Duration</text>
                <br/>
                <text>@power.Description</text>
                @if (!string.IsNullOrEmpty(power.Potency))
                {
                    <br/>
                    <div><b>Potency:</b> @power.Potency</div>
                }
            </div>);
    }
}