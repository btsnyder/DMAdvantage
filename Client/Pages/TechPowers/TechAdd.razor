@page "/techpowers/add"
@attribute [Authorize]

<h1>Add Tech Power</h1>
<EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="row my-2">
        <div class="form-group col-3">
            <label>Name</label>
            <InputText @bind-Value="@_model.Name" class="form-control" />
            <ValidationMessage For="@(() => _model.Name)" />
        </div>
        <div class="form-group col-8">
            <label>Challenge</label>
            <InputText @bind-Value="@_model.Description" class="form-control" />
            <ValidationMessage For="@(() => _model.Description)" />
        </div>
        <div class="form-group col-1">
            <label>Level</label>
            <InputNumber @bind-Value="@_model.Level" class="form-control" />
            <ValidationMessage For="@(() => _model.Level)" />
        </div>
    </div>
    <div class="row my-2">
        <div class="form-group col-3">
            <label>Casting Period</label>
            <InputSelect @bind-Value="@_model.CastingPeriod" class="form-control">
                @foreach (var period in Enum.GetValues<CastingPeriod>())
                { 
                    <option value="@period">@period.GetStringValue()</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _model.CastingPeriod)" />
        </div>
        <div class="form-group col-3">
            <label>Casting Description</label>
            <InputText @bind-Value="@_model.CastingDescription" class="form-control"/>
            <ValidationMessage For="@(() => _model.CastingDescription)" />
        </div>
        <div class="form-group col-3">
            <label>Range</label>
            <InputSelect @bind-Value="@_model.Range" class="form-control">
                @foreach (var range in Enum.GetValues<PowerRange>())
                { 
                    <option value="@range">@range.GetStringValue()</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _model.Range)" />
        </div>
        <div class="form-group col-3">
            <label>Range Description</label>
            <InputText @bind-Value="@_model.RangeDescription" class="form-control"/>
            <ValidationMessage For="@(() => _model.RangeDescription)" />
        </div>
    </div>
    <div class="row my-2">
        <div class="form-group col-4">
            <label>Duration</label>
            <InputText @bind-Value="@_model.Duration" class="form-control"/>
            <ValidationMessage For="@(() => _model.Duration)" />
        </div>
        <div class="form-group col-2">
            <label class="row">Concentration</label>
            <input type="checkbox" class="btn-check row" id="btn-check-outlined" autocomplete="off" @bind="@_model.Concentration">
                @if(_model.Concentration)
                {
                    <label class="btn btn-outline-primary" for="btn-check-outlined">True</label> 
                }
                else
                {
                    <label class="btn btn-outline-primary" for="btn-check-outlined">False</label> 
                }
            <ValidationMessage For="@(() => _model.Concentration)" class="row"/>
        </div>
        <div class="form-group col-3">
            <label>Hit Option</label>
            <InputSelect @bind-Value="@_model.HitOption" class="form-control">
                @foreach (var hit in Enum.GetValues<HitOption>())
                { 
                    <option value="@hit">@hit.GetStringValue()</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _model.HitOption)" />
        </div>
        <div class="form-group col-3">
            <label>Hit Description</label>
            <InputText @bind-Value="@_model.HitDescription" class="form-control"/>
            <ValidationMessage For="@(() => _model.HitDescription)" />
        </div>
    </div>
    <div class="row my-2">
        <div class="form-group col-9">
            <label>Overcharge</label>
            <InputText @bind-Value="@_model.Overcharge" class="form-control"/>
            <ValidationMessage For="@(() => _model.Overcharge)" />
        </div>
    </div>
    <div class="form-group">
        <button disabled="@_loading" class="btn btn-primary">
            @if (_loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Save
        </button>
        <NavLink href="techpowers" class="btn btn-link">Cancel</NavLink>
    </div>
</EditForm>
